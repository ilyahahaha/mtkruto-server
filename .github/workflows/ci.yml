name: CI

on: push

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            aarch64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            x86_64-apple-darwin,
            aarch64-apple-darwin,
          ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: denoland/setup-deno@v1

      - uses: actions/cache@v4
        with:
          path: ~/.cache/deno/deps
          key: ${{ runner.os }}-${{ hashFiles('deno.lock') }}

      - run: BUILD_ARGS="--target ${{ matrix.target }}" deno task build

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: mtkruto-server*

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Dockerfile
        run: |
            cat > Dockerfile << EOF
            FROM debian:bookworm-slim
            
            WORKDIR /app
            COPY mtkruto-server /app/
            RUN chmod +x /app/mtkruto-server
                        
            EXPOSE 8000
            EXPOSE 3000

            ENTRYPOINT /app/mtkruto-server
            EOF
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
